(()=>{var e={964:()=>{window.addEventListener("load",(function(){var e=window.inputKnobsOptions||{};e.knobWidth=e.knobWidth||e.knobDiameter||64,e.knobHeight=e.knobHeight||e.knobDiameter||64,e.sliderWidth=e.sliderWidth||e.sliderDiameter||128,e.sliderHeight=e.sliderHeight||e.sliderDiameter||20,e.switchWidth=e.switchWidth||e.switchDiameter||24,e.switchHeight=e.switchHeight||e.switchDiameter||24,e.fgcolor=e.fgcolor||"#f00",e.bgcolor=e.bgcolor||"#000",e.knobMode=e.knobMode||"linear",e.sliderMode=e.sliderMode||"relative";var n=document.createElement("style");n.innerHTML="input[type=range].input-knob,input[type=range].input-slider{\n  -webkit-appearance:none;\n  -moz-appearance:none;\n  border:none;\n  box-sizing:border-box;\n  overflow:hidden;\n  background-repeat:no-repeat;\n  background-size:100% 100%;\n  background-position:0px 0%;\n  background-color:transparent;\n  touch-action:none;\n}\ninput[type=range].input-knob{\n  width:".concat(e.knobWidth,"px; height:").concat(e.knobHeight,"px;\n}\ninput[type=range].input-slider{\n  width:").concat(e.sliderWidth,"px; height:").concat(e.sliderHeight,"px;\n}\ninput[type=range].input-knob::-webkit-slider-thumb,input[type=range].input-slider::-webkit-slider-thumb{\n  -webkit-appearance:none;\n  opacity:0;\n}\ninput[type=range].input-knob::-moz-range-thumb,input[type=range].input-slider::-moz-range-thumb{\n  -moz-appearance:none;\n  height:0;\n  border:none;\n}\ninput[type=range].input-knob::-moz-range-track,input[type=range].input-slider::-moz-range-track{\n  -moz-appearance:none;\n  height:0;\n  border:none;\n}\ninput[type=checkbox].input-switch,input[type=radio].input-switch {\n  width:").concat(e.switchWidth,"px;\n  height:").concat(e.switchHeight,"px;\n  -webkit-appearance:none;\n  -moz-appearance:none;\n  background-size:100% 200%;\n  background-position:0% 0%;\n  background-repeat:no-repeat;\n  border:none;\n  border-radius:0;\n  background-color:transparent;\n}\ninput[type=checkbox].input-switch:checked,input[type=radio].input-switch:checked {\n  background-position:0% 100%;\n}"),document.head.appendChild(n);var t=function(n){var t,a,o,r,i;n.inputKnobs||(n.inputKnobs={},n.refresh=function(){var c=n.getAttribute("data-src");o=+n.getAttribute("data-diameter");var s=document.defaultView.getComputedStyle(n,null);if(t=parseFloat(n.getAttribute("data-width")||o||s.width),a=parseFloat(n.getAttribute("data-height")||o||s.height),i=n.getAttribute("data-bgcolor")||e.bgcolor,r=n.getAttribute("data-fgcolor")||e.fgcolor,n.style.width=t+"px",n.style.height=a+"px",c)n.style.backgroundImage="url("+c+")";else{var l=Math.min(t,a),u='<svg xmlns="http://www.w3.org/2000/svg" width="'.concat(t,'" height="').concat(2*a,'" viewBox="0 0 ').concat(t," ").concat(2*a,'" preserveAspectRatio="none">\n<g><rect fill="').concat(i,'" x="1" y="1" width="').concat(t-2,'" height="').concat(a-2,'" rx="').concat(.25*l,'" ry="').concat(.25*l,'"/>\n<rect fill="').concat(i,'" x="1" y="').concat(a+1,'" width="').concat(t-2,'" height="').concat(a-2,'" rx="').concat(.25*l,'" ry="').concat(.25*l,'"/>\n<circle fill="').concat(r,'" cx="').concat(.5*t,'" cy="').concat(1.5*a,'" r="').concat(.25*l,'"/></g></svg>');n.style.backgroundImage="url(data:image/svg+xml;base64,"+btoa(u)+")"}},n.refresh())},a=function(n){var t,a,o,r,i;if(n.inputKnobs)n.redraw();else{var c=n.inputKnobs={};n.refresh=function(){o=+n.getAttribute("data-diameter");var s=document.defaultView.getComputedStyle(n,null);t=parseFloat(n.getAttribute("data-width")||o||s.width),a=parseFloat(n.getAttribute("data-height")||o||s.height),i=n.getAttribute("data-bgcolor")||e.bgcolor,r=n.getAttribute("data-fgcolor")||e.fgcolor,c.sensex=c.sensey=200,n.className.indexOf("input-knob")>=0?c.itype="k":t>=a?(c.itype="h",c.sensex=t-a,c.sensey=1/0,n.style.backgroundSize="auto 100%"):(c.itype="v",c.sensex=1/0,c.sensey=a-t,n.style.backgroundSize="100% auto"),n.style.width=t+"px",n.style.height=a+"px",c.frameheight=a;var l=n.getAttribute("data-src");if(l){n.style.backgroundImage="url(".concat(l,")");var u=+n.getAttribute("data-sprites");c.sprites=u||0,c.sprites>=1?n.style.backgroundSize="100% ".concat(100*(c.sprites+1),"%"):"k"!=c.itype&&(n.style.backgroundColor=i,n.style.borderRadius=.25*Math.min(t,a)+"px")}else{var p;switch(c.itype){case"k":p=function(e,n,t){for(var a='<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="64" height="'.concat(6464,'" viewBox="0 0 64 ').concat(6464,'" preserveAspectRatio="none">\n<defs><g id="K"><circle cx="32" cy="32" r="30" fill="').concat(t,'"/>\n<line x1="32" y1="28" x2="32" y2="7" stroke-linecap="round" stroke-width="6" stroke="').concat(n,'"/></g></defs>\n<use xlink:href="#K" transform="rotate(-135,32,32)"/>'),o=1;o<e;++o)a+='<use xlink:href="#K" transform="translate(0,'.concat(64*o,") rotate(").concat(270*o/e-135,',32,32)"/>');return a+"</svg>"}(101,r,i);break;case"h":p=function(e,n,t,a,o){for(var r='<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="'.concat(a,'" height="').concat(101*o,'" viewBox="0 0 ').concat(a," ").concat(101*o,'" preserveAspectRatio="none">\n<defs><g id="B"><rect x="0" y="0" width="').concat(a,'" height="').concat(o,'" rx="').concat(o/2,'" ry="').concat(o/2,'" fill="').concat(t,'"/></g>\n<g id="K"><circle x="').concat(a/2,'" y="0" r="').concat(o/2*.9,'" fill="').concat(n,'"/></g></defs>'),i=0;i<101;++i)r+='<use xlink:href="#B" transform="translate(0,'.concat(o*i,')"/>'),r+='<use xlink:href="#K" transform="translate('.concat(o/2+(a-o)*i/100,",").concat(o/2+o*i,')"/>');return r+"</svg>"}(0,r,i,t,a);break;case"v":p=function(e,n,t,a,o){for(var r='<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="'.concat(a,'" height="').concat(101*o,'" viewBox="0 0 ').concat(a," ").concat(101*o,'" preserveAspectRatio="none">\n<defs><rect id="B" x="0" y="0" width="').concat(a,'" height="').concat(o,'" rx="').concat(a/2,'" ry="').concat(a/2,'" fill="').concat(t,'"/>\n<circle id="K" x="0" y="0" r="').concat(a/2*.9,'" fill="').concat(n,'"/></defs>'),i=0;i<101;++i)r+='<use xlink:href="#B" transform="translate(0,'.concat(o*i,')"/>'),r+='<use xlink:href="#K" transform="translate('.concat(a/2," ").concat(o*(i+1)-a/2-i*(o-a)/100,')"/>');return r+"</svg>"}(0,r,i,t,a)}c.sprites=100,n.style.backgroundImage="url(data:image/svg+xml;base64,"+btoa(p)+")",n.style.backgroundSize="100% ".concat(100*(c.sprites+1),"%")}c.valrange={min:+n.min,max:""==n.max?100:+n.max,step:""==n.step?1:+n.step},n.redraw(!0)},n.setValue=function(e){if((e=Math.round((e-c.valrange.min)/c.valrange.step)*c.valrange.step+c.valrange.min)<c.valrange.min&&(e=c.valrange.min),e>c.valrange.max&&(e=c.valrange.max),n.value=e,n.value!=c.oldvalue){n.setAttribute("value",n.value),n.redraw();var t=document.createEvent("HTMLEvents");t.initEvent("input",!1,!0),n.dispatchEvent(t),c.oldvalue=n.value}},c.pointerdown=function(t){n.focus();var a=t;t.touches&&(t=t.touches[0]);var o=n.getBoundingClientRect(),r=.5*(o.left+o.right),i=.5*(o.top+o.bottom),s=t.clientX,l=t.clientY,u=Math.atan2(t.clientX-r,i-t.clientY);"k"==c.itype&&"circularabs"==e.knobMode&&(dv=c.valrange.min+(u/Math.PI*.75+.5)*(c.valrange.max-c.valrange.min),n.setValue(dv)),"k"!=c.itype&&"abs"==e.sliderMode&&(dv=.5*(c.valrange.min+c.valrange.max)+((s-r)/c.sensex-(l-i)/c.sensey)*(c.valrange.max-c.valrange.min),n.setValue(dv)),c.dragfrom={x:t.clientX,y:t.clientY,a:Math.atan2(t.clientX-r,i-t.clientY),v:+n.value},document.addEventListener("mousemove",c.pointermove),document.addEventListener("mouseup",c.pointerup),document.addEventListener("touchmove",c.pointermove),document.addEventListener("touchend",c.pointerup),document.addEventListener("touchcancel",c.pointerup),document.addEventListener("touchstart",c.preventScroll),a.preventDefault(),a.stopPropagation()},c.pointermove=function(t){var a,o=n.getBoundingClientRect(),r=.5*(o.left+o.right),i=.5*(o.top+o.bottom);t.touches&&(t=t.touches[0]);var s=t.clientX-c.dragfrom.x,l=t.clientY-c.dragfrom.y,u=Math.atan2(t.clientX-r,i-t.clientY);switch(c.itype){case"k":switch(e.knobMode){case"linear":a=(s/c.sensex-l/c.sensey)*(c.valrange.max-c.valrange.min),t.shiftKey&&(a*=.2),n.setValue(c.dragfrom.v+a);break;case"circularabs":if(!t.shiftKey){a=c.valrange.min+(u/Math.PI*.75+.5)*(c.valrange.max-c.valrange.min),n.setValue(a);break}case"circularrel":u>c.dragfrom.a+Math.PI&&(u-=2*Math.PI),u<c.dragfrom.a-Math.PI&&(u+=2*Math.PI),a=(u-=c.dragfrom.a)/Math.PI/1.5*(c.valrange.max-c.valrange.min),t.shiftKey&&(a*=.2),n.setValue(c.dragfrom.v+a)}break;case"h":case"v":a=(s/c.sensex-l/c.sensey)*(c.valrange.max-c.valrange.min),t.shiftKey&&(a*=.2),n.setValue(c.dragfrom.v+a)}},c.pointerup=function(){document.removeEventListener("mousemove",c.pointermove),document.removeEventListener("touchmove",c.pointermove),document.removeEventListener("mouseup",c.pointerup),document.removeEventListener("touchend",c.pointerup),document.removeEventListener("touchcancel",c.pointerup),document.removeEventListener("touchstart",c.preventScroll);var e=document.createEvent("HTMLEvents");e.initEvent("change",!1,!0),n.dispatchEvent(e)},c.preventScroll=function(e){e.preventDefault()},c.keydown=function(){n.redraw()},c.wheel=function(e){var t=e.deltaY>0?-c.valrange.step:c.valrange.step;e.shiftKey||(t*=5),n.setValue(+n.value+t),e.preventDefault(),e.stopPropagation()},n.redraw=function(e){if(e||c.valueold!=n.value){var o=(n.value-c.valrange.min)/(c.valrange.max-c.valrange.min);if(c.sprites>=1)n.style.backgroundPosition="0px "+-(o*c.sprites|0)*c.frameheight+"px";else switch(c.itype){case"k":n.style.transform="rotate("+(270*o-135)+"deg)";break;case"h":n.style.backgroundPosition=(t-a)*o+"px 0px";break;case"v":n.style.backgroundPosition="0px "+(a-t)*(1-o)+"px"}c.valueold=n.value}},n.refresh(),n.redraw(!0),n.addEventListener("keydown",c.keydown),n.addEventListener("mousedown",c.pointerdown),n.addEventListener("touchstart",c.pointerdown),n.addEventListener("wheel",c.wheel)}},o=function(){for(var e=document.querySelectorAll("input.input-knob,input.input-slider"),n=0;n<e.length;++n)r.push([a,e[n]]);e=document.querySelectorAll("input[type=checkbox].input-switch,input[type=radio].input-switch");for(var o=0;o<e.length;++o)r.push([t,e[o]])},r=[];o(),setInterval((function(){for(var e=0;r.length>0&&e<8;++e){var n=r.shift();n[0](n[1])}r.length<=0&&o()}),50)}))},365:(e,n,t)=>{"use strict";t.d(n,{A:()=>c});var a=t(354),o=t.n(a),r=t(314),i=t.n(r)()(o());i.push([e.id,"body {\n  margin: 0;\n}\n.app-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  height: 100vh;\n}\n\n.decks,\n.inputs {\n  display: flex;\n  justify-content: space-evenly;\n}\n\n.mixer {\n  position: relative;\n}\n\n.eq-1 {\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  left: 50px;\n  top: 50px;\n  gap: 10px;\n}\n.eq-2 {\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  right: 50px;\n  top: 50px;\n  gap: 10px;\n}\n\n.deck-1,\n.deck-2 {\n  position: relative;\n}\n\n.volume-controls {\n  position: absolute;\n  bottom: 100px;\n  display: flex;\n  justify-content: space-evenly;\n  width: 100%;\n}\n\n#volumeControl-1,\n#volumeControl-2 {\n  transform: rotate(-90deg);\n}\n\n#text-1,\n#text-2 {\n  font-family: Arial, sans-serif; /* Font family */\n  font-size: 12px; /* Font size */\n  fill: #000000; /* Text color */\n}\n\n.record {\n  position: absolute;\n  left: 10px;\n  top: 10px;\n  transition: 0.3s linear;\n}\n\n#arm-1,\n#arm-2 {\n  position: absolute;\n  right: 20px;\n  top: 10px;\n  transform-origin: 105px 105px;\n}\n\n#stop-start-1,\n#stop-start-2 {\n  position: absolute;\n  bottom: 15px;\n  left: 15px;\n  z-index: 1;\n  padding: 15px;\n}\n\n.play {\n  transition: 0.3s linear;\n}\n\n#speedControl-1,\n#speedControl-2 {\n  position: absolute;\n  bottom: 100px;\n  right: -20px;\n  transform: rotate(90deg);\n  z-index: 2;\n}\n\n/* Basic styles for the range input */\ninput[type='range'].slider {\n  -webkit-appearance: none;\n  background: transparent;\n}\n\n/* Webkit (Chrome, Safari) styles */\ninput[type='range'].slider::-webkit-slider-runnable-track {\n  background: grey;\n  height: 30px;\n  border-radius: 5px;\n}\n\ninput[type='range'].slider::-webkit-slider-thumb {\n  -webkit-appearance: none;\n  appearance: none;\n  width: 20px;\n  height: 20px;\n  background: #cfcfcf;\n  cursor: pointer;\n  margin-top: 5px;\n  border-radius: 5px;\n}\n\n#seekControl-1,\n#seekControl-2 {\n  width: 400px;\n}\n\n.input {\n  position: absolute;\n  bottom: -100px;\n  left: 100px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;EACE,SAAS;AACX;AACA;EACE,aAAa;EACb,sBAAsB;EACtB,6BAA6B;EAC7B,aAAa;AACf;;AAEA;;EAEE,aAAa;EACb,6BAA6B;AAC/B;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,aAAa;EACb,sBAAsB;EACtB,UAAU;EACV,SAAS;EACT,SAAS;AACX;AACA;EACE,kBAAkB;EAClB,aAAa;EACb,sBAAsB;EACtB,WAAW;EACX,SAAS;EACT,SAAS;AACX;;AAEA;;EAEE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,aAAa;EACb,aAAa;EACb,6BAA6B;EAC7B,WAAW;AACb;;AAEA;;EAEE,yBAAyB;AAC3B;;AAEA;;EAEE,8BAA8B,EAAE,gBAAgB;EAChD,eAAe,EAAE,cAAc;EAC/B,aAAa,EAAE,eAAe;AAChC;;AAEA;EACE,kBAAkB;EAClB,UAAU;EACV,SAAS;EACT,uBAAuB;AACzB;;AAEA;;EAEE,kBAAkB;EAClB,WAAW;EACX,SAAS;EACT,6BAA6B;AAC/B;;AAEA;;EAEE,kBAAkB;EAClB,YAAY;EACZ,UAAU;EACV,UAAU;EACV,aAAa;AACf;;AAEA;EACE,uBAAuB;AACzB;;AAEA;;EAEE,kBAAkB;EAClB,aAAa;EACb,YAAY;EACZ,wBAAwB;EACxB,UAAU;AACZ;;AAEA,qCAAqC;AACrC;EACE,wBAAwB;EACxB,uBAAuB;AACzB;;AAEA,mCAAmC;AACnC;EACE,gBAAgB;EAChB,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,wBAAwB;EACxB,gBAAgB;EAChB,WAAW;EACX,YAAY;EACZ,mBAAmB;EACnB,eAAe;EACf,eAAe;EACf,kBAAkB;AACpB;;AAEA;;EAEE,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,cAAc;EACd,WAAW;EACX,aAAa;EACb,sBAAsB;EACtB,SAAS;AACX",sourcesContent:["body {\n  margin: 0;\n}\n.app-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  height: 100vh;\n}\n\n.decks,\n.inputs {\n  display: flex;\n  justify-content: space-evenly;\n}\n\n.mixer {\n  position: relative;\n}\n\n.eq-1 {\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  left: 50px;\n  top: 50px;\n  gap: 10px;\n}\n.eq-2 {\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  right: 50px;\n  top: 50px;\n  gap: 10px;\n}\n\n.deck-1,\n.deck-2 {\n  position: relative;\n}\n\n.volume-controls {\n  position: absolute;\n  bottom: 100px;\n  display: flex;\n  justify-content: space-evenly;\n  width: 100%;\n}\n\n#volumeControl-1,\n#volumeControl-2 {\n  transform: rotate(-90deg);\n}\n\n#text-1,\n#text-2 {\n  font-family: Arial, sans-serif; /* Font family */\n  font-size: 12px; /* Font size */\n  fill: #000000; /* Text color */\n}\n\n.record {\n  position: absolute;\n  left: 10px;\n  top: 10px;\n  transition: 0.3s linear;\n}\n\n#arm-1,\n#arm-2 {\n  position: absolute;\n  right: 20px;\n  top: 10px;\n  transform-origin: 105px 105px;\n}\n\n#stop-start-1,\n#stop-start-2 {\n  position: absolute;\n  bottom: 15px;\n  left: 15px;\n  z-index: 1;\n  padding: 15px;\n}\n\n.play {\n  transition: 0.3s linear;\n}\n\n#speedControl-1,\n#speedControl-2 {\n  position: absolute;\n  bottom: 100px;\n  right: -20px;\n  transform: rotate(90deg);\n  z-index: 2;\n}\n\n/* Basic styles for the range input */\ninput[type='range'].slider {\n  -webkit-appearance: none;\n  background: transparent;\n}\n\n/* Webkit (Chrome, Safari) styles */\ninput[type='range'].slider::-webkit-slider-runnable-track {\n  background: grey;\n  height: 30px;\n  border-radius: 5px;\n}\n\ninput[type='range'].slider::-webkit-slider-thumb {\n  -webkit-appearance: none;\n  appearance: none;\n  width: 20px;\n  height: 20px;\n  background: #cfcfcf;\n  cursor: pointer;\n  margin-top: 5px;\n  border-radius: 5px;\n}\n\n#seekControl-1,\n#seekControl-2 {\n  width: 400px;\n}\n\n.input {\n  position: absolute;\n  bottom: -100px;\n  left: 100px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n"],sourceRoot:""}]);const c=i},314:e=>{"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",a=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),a&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),a&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,a,o,r){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(a)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var l=0;l<e.length;l++){var u=[].concat(e[l]);a&&i[u[0]]||(void 0!==r&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=r),t&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=t):u[2]=t),o&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=o):u[4]="".concat(o)),n.push(u))}},n}},354:e=>{"use strict";e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),r="/*# ".concat(o," */");return[n].concat([r]).join("\n")}return[n].join("\n")}},72:e=>{"use strict";var n=[];function t(e){for(var t=-1,a=0;a<n.length;a++)if(n[a].identifier===e){t=a;break}return t}function a(e,a){for(var r={},i=[],c=0;c<e.length;c++){var s=e[c],l=a.base?s[0]+a.base:s[0],u=r[l]||0,p="".concat(l," ").concat(u);r[l]=u+1;var d=t(p),A={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==d)n[d].references++,n[d].updater(A);else{var m=o(A,a);a.byIndex=c,n.splice(c,0,{identifier:p,updater:m,references:1})}i.push(p)}return i}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var r=a(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<r.length;i++){var c=t(r[i]);n[c].references--}for(var s=a(e,o),l=0;l<r.length;l++){var u=t(r[l]);0===n[u].references&&(n[u].updater(),n.splice(u,1))}r=s}}},659:e=>{"use strict";var n={};e.exports=function(e,t){var a=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},540:e=>{"use strict";e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},56:(e,n,t)=>{"use strict";e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},825:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,o&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),n.styleTagTransform(a,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},113:e=>{"use strict";e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(a){var o=n[a];if(void 0!==o)return o.exports;var r=n[a]={id:a,exports:{}};return e[a](r,r.exports,t),r.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var a in n)t.o(n,a)&&!t.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:n[a]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{"use strict";var e=t(72),n=t.n(e),a=t(825),o=t.n(a),r=t(659),i=t.n(r),c=t(56),s=t.n(c),l=t(540),u=t.n(l),p=t(113),d=t.n(p),A=t(365),m={};function g(e){var n=function(e){return{audioUpload:document.getElementById("audioUpload-".concat(e)),speedControl:document.getElementById("speedControl-".concat(e)),trackLabel:document.getElementById("text-".concat(e)),volumeControl:document.getElementById("volumeControl-".concat(e)),arm:document.getElementById("arm-".concat(e)),playPauseButton:document.getElementById("stop-start-".concat(e)),seekControl:document.getElementById("seekControl-".concat(e)),bassControl:document.getElementById("low-eq-".concat(e)),midControl:document.getElementById("med-eq-".concat(e)),trebleControl:document.getElementById("hi-eq-".concat(e))}}(e),t=function(e,n){var t=document.createElement("audio");t.id="audioElement-".concat(e),t.volume=n.value;var a=new(window.AudioContext||window.webkitAudioContext),o=a.createMediaElementSource(t);return{audioElement:t,audioContext:a,source:o}}(e,n.volumeControl),a=t.audioElement,o=t.audioContext,r=t.source,i=function(e){var n=e.createBiquadFilter();n.type="lowshelf",n.frequency.setValueAtTime(200,e.currentTime),n.gain.setValueAtTime(0,e.currentTime);var t=e.createBiquadFilter();t.type="peaking",t.frequency.setValueAtTime(1e3,e.currentTime),t.gain.setValueAtTime(0,e.currentTime);var a=e.createBiquadFilter();return a.type="highshelf",a.frequency.setValueAtTime(3e3,e.currentTime),a.gain.setValueAtTime(0,e.currentTime),{bassFilter:n,midFilter:t,trebleFilter:a}}(o);!function(e,n,t,a,o){e.connect(n),n.connect(t),t.connect(a),a.connect(o.destination)}(r,i.bassFilter,i.midFilter,i.trebleFilter,o),function(e,n,t,a,o){var r=a.bassFilter,i=a.midFilter,c=a.trebleFilter,s=e.volumeControl,l=e.audioUpload,u=e.speedControl,p=e.arm,d=e.playPauseButton,A=e.seekControl,m=e.bassControl,g=e.midControl,v=e.trebleControl,f=e.trackLabel;s.addEventListener("input",(function(){n.volume=s.value})),l.addEventListener("change",(function(){var e=l.files;if(e.length>0){var t=e[0],a=URL.createObjectURL(t);n.src=a,n.load(),f.textContent=t.name,p.style.cssText="transform:rotate(0deg )",p.classList.contains("play")&&p.classList.remove("play"),d.textContent="Play"}})),u.addEventListener("input",(function(){n.playbackRate=u.value})),A.addEventListener("input",(function(){var e=A.value/100*n.duration;n.currentTime=e})),d.addEventListener("click",(function(){p.classList.toggle("play"),document.querySelector(".deck-".concat(o," .record")).classList.toggle("play"),p.classList.contains("play")?(t.resume().then((function(){n.play()})),d.textContent="Stop"):(n.pause(),d.textContent="Play")})),m.addEventListener("input",(function(){r.gain.setValueAtTime(parseFloat(m.value),t.currentTime)})),g.addEventListener("input",(function(){i.gain.setValueAtTime(parseFloat(g.value),t.currentTime)})),v.addEventListener("input",(function(){c.gain.setValueAtTime(parseFloat(v.value),t.currentTime)}))}(n,a,o,i,e),a.preservesPitch=!1,a.addEventListener("timeupdate",(function(){var t=a.duration,o=a.currentTime;if(t>0){var r=o/t*100;n.arm.style.cssText="transform:rotate(".concat(20+o/t*18,"deg )"),document.querySelector(".deck-".concat(e," .record")).style.cssText="transform:rotate(".concat(o/t*360,"deg)"),n.seekControl.value=r}}))}m.styleTagTransform=d(),m.setAttributes=s(),m.insert=i().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=u(),n()(A.A,m),A.A&&A.A.locals&&A.A.locals,t(964),g(1),g(2)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,